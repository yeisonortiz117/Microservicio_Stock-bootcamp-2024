plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.3'
	id 'io.spring.dependency-management' version '1.1.6'
	id 'org.springdoc.openapi-gradle-plugin' version '1.9.0'
}

group = 'bootcamp_pragma'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	implementation 'javax.persistence:javax.persistence-api:2.2' // Ajusta la versión según sea necesario
	implementation 'javax.validation:validation-api:2.0.1.Final' // Ajusta la versión según sea necesario
	implementation 'org.mapstruct:mapstruct:1.5.3.Final' // O una versión compatible
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.3.Final' // O una versión compatible
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa:3.0.0' // O la versión que estés utilizando


}

tasks.named('test') {
	useJUnitPlatform()
}
